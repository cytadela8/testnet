[
  { ae_core, [

    %% comment

    {peers, []},

    {master_pub, <<"BIVZhs16gtoQ/uUMujl5aSutpImC4va8MewgCveh6MEuDjoDvtQqYZ5FeYcUhY/QLjpCBrXjqvTtFiN4li0Nhjo=">>},

    {test_mode, true},
    {cores_to_mine, 1000}, %% The maximum number of cores to use when mining.

    {trie_size, 10000}, %%  we can adjust this many accounts and channels in all the blocks in free_constants:revert_depth()
    {revert_depth, 100}, %% save all data from the most recent block, and this far into history. That way if blocks are reverted, we still have all the state.
    {channel_delay, 10},
    {max_message_size, 10000},
    {token_decimals, 100000000},

    %% Everything above this line is needed for blockchain consensus. Everything below this line can be modified for your node.

    {tx_fee, 10},
    {lightning_fee, 9},
    {minimum_tx_fee, 9}, %% Only txs with this fee or higher get accepted into your mempool. If you are a miner, you are censoring all txs with lower fees.

    %% This is how long of a fork we can recover from. If this number is bigger, it takes longer to sync with the network because you download more unnecessary blocks.
    %% It is best to keep this number low when you first sync, and make it bigger once you are synced with the network.
    %% On nodes that are mining, this should usually be set very low.
    {fork_tolerance, 20},

    {min_channel_ratio, 0.5}, %% So the customer needs to put in twice as much money as the server.

    {bet_gas_limit, 100000},
    {time_limit, 100000}, %% Maximum amount of time to wait for a channel contract to process.
    {space_limit, 100000},
    {fun_limit, 1000},
    {var_limit, 10000},

    {min_channel_delay, 0}, %% Needs to be long enough for you to stop your partner from closing at the wrong state.
    {max_channel_delay, 2000},

    {download_blocks_batch, 100},
    {download_blocks_sizecap, 1000000}, %% 1MB = 1000000B sizecap
    {push_block_gossip_stop_count, 6}, %% 2^-23 part of network receives new block
    {push_block_gossip_process_count, 6},
    {garbage_period, 50}
  ]},

  {lager, [
      {handlers, [
          {lager_file_backend, [{file, "log/testnet.log"}, {level, debug}, {size, 41943040}, {date, "$D0"}, {count, 10}]}
      ]}
  ]}

].
